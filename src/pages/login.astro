---
import Icon from "astro-icon";
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <title slot="page-title">ShockSoc | Login</title>
  <meta
    name="description"
    content="ShockSoc York Admin LogIn Page - The University Of York Engineering Society"
    slot="page-description"
  />
  <div class="w-full h-full flex">
    <div
      class="m-auto p-4 border-2 border-slate-900 bg-slate-600 rounded flex flex-col"
    >
      <label
        class="mx-auto mt-4 my-10 italic font-bold text-2xl md:text-3xl xl:text-4xl bg-gradient-to-r from-uni-blue via-uni-green to-uni-yellow bg-clip-text text-transparent"
        >Log In</label
      >
      <button
        id="loginBtn"
        class="flex flex-row rounded p-4 text-slate-100 mx-auto bg-black transition-colors ease-linear duration-150"
      >
        <span
          ><Icon name="bi:github" class="w-6 h-6 md:mr-4 text-slate-100" />
        </span> LogIn with GitHub
      </button>
    </div>
  </div>
</Layout>

<script>
  import {
    getAuth,
    getRedirectResult,
    GithubAuthProvider,
    signInWithRedirect,
  } from "firebase/auth";
  import { authObserver, firebaseClient } from "../firebase";

  const auth = getAuth(firebaseClient);
  const provider = new GithubAuthProvider().addScope("repo");

  const loginBtn = document.getElementById("loginBtn") as HTMLButtonElement;

  loginBtn.addEventListener("click", () => {
    if (!auth.currentUser) {
      signInWithRedirect(auth, provider);
    }
  });
  getRedirectResult(auth).then((result) => {
    if (result) {
      const credential = GithubAuthProvider.credentialFromResult(result);
      if (credential) {
        // Put a cookie so users can deploy website
        document.cookie = `gh=${credential.accessToken};path=/`;

        // Redirect
        window.location.href = "/website/";
      } else {
        alert("GITHUB PROVIDER ERROR: Empty credentials");
      }
    }
  });

  authObserver(() => (window.location.href = "/website/"));
</script>

<style>
  .textInputContainer {
    @apply relative p-1 rounded bg-gradient-to-tr from-uni-blue via-uni-green to-uni-yellow my-4;
  }
  .labelContainer {
    @apply absolute -top-3 left-4 bg-slate-600 px-2 peer-focus:-translate-y-3 peer-focus:-translate-x-4 transition-transform ease-in-out duration-150;
  }
  .textInputLabel {
    @apply bg-gradient-to-tr from-uni-blue via-uni-green to-uni-yellow bg-clip-text text-transparent;
  }
  .textInput {
    @apply bg-slate-600 outline-none rounded p-4;
  }
</style>
